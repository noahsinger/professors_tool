looks like the actual page containing student data!
student list for scripting
https://bb.tulsacc.edu/webapps/blackboard/execute/userManager?course_id=_91056557_1

student list for T xhtml
https://bb.tulsacc.edu/webapps/blackboard/execute/userManager?course_id=_91056531_1

--------------------------------------

Login form outside of frames
https://bb.tulsacc.edu/webapps/login/?action=login

The login form
<form onsubmit="return validate_form( this, true );" method="POST" action="https://bb.tulsacc.edu/webapps/login/" NAME="login" >
  <div id="loginFormFields" class="clearfix">
    <ul id="loginFormList" class="clearfix">
      <li class="clearfix">
        <label for="user_id">Username:</label>
        <input type="text" name="user_id" id="user_id" size="25" maxlength="50" tabindex="1" />
      </li>
      <li class="clearfix">
        <label for="password">Password:</label>
        <input size="25" name="password" id="password" type="password" tabindex="2" />
      </li>
      <li class="clearfix">
        <input type="submit" value="Login" name="login" class="submit button-1" tabindex="3" />
      </li>
    </ul>
  </div>

  <input type="hidden" name="action" value="login" />
  <input type="hidden" name="remote-user" value="" />
  <input type="hidden" name="new_loc" value="&nbsp;" />
  <input type="hidden" name="auth_type" value="" />
  <input type="hidden" name="one_time_token" value="E5008452035FC5F1FAE7F33D31383238" />
  <input type="hidden" name="encoded_pw" value="" />
  <input type="hidden" name="encoded_pw_unicode" value="" />
</form>
</div>

--------------------------------------

contains validate_form function
/javascript/validate_login.js

function validate_form( form, useChallengeResponse ) {
  form.user_id.value = form.user_id.value.replace( /^\s*|\s*$/g, "" );
  if ( form.user_id.value == "" || form.password.value == "" ) {
    alert( JS_RESOURCES.getString('validate.login.invalid.username.or.pass') );
    return false;
  }
  
  if ( useChallengeResponse ) {
    return validate_form_with_challenge( form ); // <-- we do this
  } else {
    return validate_form_no_challenge( form );
  }
}

function validate_form_with_challenge( form ) {
  var passwd_enc = hex_md5( form.password.value ); // <-- from /javascript/md5-legacy.js
  var encoded_pw_unicode = calcMD5( form.password.value ); // <-- from /javascript/md5.js
  var final_to_encode = passwd_enc + form.one_time_token.value;
  form.encoded_pw.value = hex_md5( final_to_encode );
  final_to_encode = encoded_pw_unicode + form.one_time_token.value;
  form.encoded_pw_unicode.value = calcMD5( final_to_encode );
  form.password.value = "";
  return true;
}
